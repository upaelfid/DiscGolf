@model DiscGolf.Models.Stats
<link rel="stylesheet" href="http://cdn.jsdelivr.net/chartist.js/latest/chartist.min.css">
<style>
.ct-chart .ct-label, .ct-chart .ct-label.ct-horizontal {text-align:center !important; font-size:8px !important;}
.ct-chart .ct-series.ct-series-b .ct-bar{stroke: #007acc;}
.ct-chart .ct-series.ct-series-c .ct-bar{stroke: yellow;}</style>
@{
    ViewBag.Title = User.Identity.Name +" Stats";
    
    //Start animated chart data collection 
    var scores = (from r in Model.myStats
                  where r.Id != 1 && r.Id != 2 && r.Id != 31 && r.h18 != 0 && User.Identity.Name == r.Name && r.ccID == 602
                  select new { Name = r.Name, pSum = r.h1 + r.h2 + r.h3 + r.h4 + r.h5 + r.h6 + r.h7 + r.h8 + r.h9 + r.h10 + r.h11 + r.h12 + r.h13 + r.h14 + r.h15 + r.h16 + r.h17 + r.h18, r.Id, r.gDate }).Distinct().ToList();

    List<String> _xval = new List<String> { };
    foreach (var x in scores)
    {
        _xval.Add(String.Format("{0:MM dd yyyy}", x.gDate));
    }
    ViewBag.labels = _xval.ToArray();
    List<int> _yval = new List<int> { };

    foreach (var x in scores)
        {
            _yval.Add(x.pSum);
        }
    ViewBag.series = _yval.ToArray();   
    //End animated chart data collection
    
    //Start for Bar Chart Data. This should be more concise and pretty. 
    //'var allh1' separates data for hole one into par, birdie and over-par. 
    //'var one' adds the number or par, birdies and over- pars
    //'var t' does a table union for all holes
    var allh1 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h1", par = s.h1 == 3 ? 1 : 0, birdie = s.h1 < 3 ? 1 : 0, over = s.h1 > 3 ? 1 : 0 }).ToList();


    var one = (from h in allh1
               group h by new { h.ccID, h.hole } into g
               select new { hole = "h1", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();


    var allh2 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h2", par = s.h2 == 3 ? 1 : 0, birdie = s.h2 < 3 ? 1 : 0, over = s.h2 > 3 ? 1 : 0 }).ToList();


    var two = (from h in allh2
               group h by new { h.ccID, h.hole } into g
               select new { hole = "h2", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh3 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h3", par = s.h3 == 3 ? 1 : 0, birdie = s.h3 < 3 ? 1 : 0, over = s.h3 > 3 ? 1 : 0 }).ToList();

    var three = (from h in allh3
                 group h by new { h.ccID, h.hole } into g
                 select new { hole = "h3", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh4 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h4", par = s.h4 == 3 ? 1 : 0, birdie = s.h4 < 3 ? 1 : 0, over = s.h4 > 3 ? 1 : 0 }).ToList();


    var four = (from h in allh4
                group h by new { h.ccID, h.hole } into g
                select new { hole = "h4", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh5 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h5", par = s.h5 == 3 ? 1 : 0, birdie = s.h5 < 3 ? 1 : 0, over = s.h5 > 3 ? 1 : 0 }).ToList();


    var five = (from h in allh5
                group h by new { h.ccID, h.hole } into g
                select new { hole = "h5", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh6 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h6", par = s.h6 == 3 ? 1 : 0, birdie = s.h6 < 3 ? 1 : 0, over = s.h6 > 3 ? 1 : 0 }).ToList();


    var six = (from h in allh6
               group h by new { h.ccID, h.hole } into g
               select new { hole = "h6", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh7 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h7", par = s.h7 == 3 ? 1 : 0, birdie = s.h7 < 3 ? 1 : 0, over = s.h7 > 3 ? 1 : 0 }).ToList();


    var seven = (from h in allh7
                 group h by new { h.ccID, h.hole } into g
                 select new { hole = "h7", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh8 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h8", par = s.h8 == 3 ? 1 : 0, birdie = s.h8 < 3 ? 1 : 0, over = s.h8 > 3 ? 1 : 0 }).ToList();


    var eight = (from h in allh8
                 group h by new { h.ccID, h.hole } into g
                 select new { hole = "h8", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh9 = (from s in Model.myStats
                 where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                 select new { s.ccID, hole = "h9", par = s.h9 == 3 ? 1 : 0, birdie = s.h9 < 3 ? 1 : 0, over = s.h9 > 3 ? 1 : 0 }).ToList();


    var nine = (from h in allh9
                group h by new { h.ccID, h.hole } into g
                select new { hole = "h9", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh10 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h10", par = s.h10 == 3 ? 1 : 0, birdie = s.h10 < 3 ? 1 : 0, over = s.h10 > 3 ? 1 : 0 }).ToList();


    var ten = (from h in allh10
               group h by new { h.ccID, h.hole } into g
               select new { hole = "h10", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh11 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h11", par = s.h11 == 3 ? 1 : 0, birdie = s.h11 < 3 ? 1 : 0, over = s.h11 > 3 ? 1 : 0 }).ToList();


    var eleven = (from h in allh11
                  group h by new { h.ccID, h.hole } into g
                  select new { hole = "h11", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh12 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h12", par = s.h12 == 3 ? 1 : 0, birdie = s.h12 < 3 ? 1 : 0, over = s.h12 > 3 ? 1 : 0 }).ToList();


    var twelve = (from h in allh12
                  group h by new { h.ccID, h.hole } into g
                  select new { hole = "h12", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh13 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h13", par = s.h13 == 3 ? 1 : 0, birdie = s.h13 < 3 ? 1 : 0, over = s.h13 > 3 ? 1 : 0 }).ToList();


    var thirteen = (from h in allh13
                    group h by new { h.ccID, h.hole } into g
                    select new { hole = "h13", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh14 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h14", par = s.h14 == 3 ? 1 : 0, birdie = s.h14 < 3 ? 1 : 0, over = s.h14 > 3 ? 1 : 0 }).ToList();


    var fourteen = (from h in allh14
                    group h by new { h.ccID, h.hole } into g
                    select new { hole = "h14", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh15 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h15", par = s.h15 == 3 ? 1 : 0, birdie = s.h15 < 3 ? 1 : 0, over = s.h15 > 3 ? 1 : 0 }).ToList();


    var fifteen = (from h in allh15
                   group h by new { h.ccID, h.hole } into g
                   select new { hole = "h15", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh16 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h16", par = s.h16 == 3 ? 1 : 0, birdie = s.h16 < 3 ? 1 : 0, over = s.h16 > 3 ? 1 : 0 }).ToList();


    var sixteen = (from h in allh16
                   group h by new { h.ccID, h.hole } into g
                   select new { hole = "h16", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh17 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h17", par = s.h17 == 3 ? 1 : 0, birdie = s.h17 < 3 ? 1 : 0, over = s.h17 > 3 ? 1 : 0 }).ToList();


    var seventeen = (from h in allh17
                     group h by new { h.ccID, h.hole } into g
                     select new { hole = "h17", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var allh18 = (from s in Model.myStats
                  where s.Id != 1 && s.Id != 2 && s.Id != 31 && s.h18 != 0 && s.ccID == 602
                  select new { s.ccID, hole = "h18", par = s.h18 == 3 ? 1 : 0, birdie = s.h18 < 3 ? 1 : 0, over = s.h18 > 3 ? 1 : 0 }).ToList();


    var eighteen = (from h in allh18
                    group h by new { h.ccID, h.hole } into g
                    select new { hole = "h18", parS = g.Sum(h => h.par), birds = g.Sum(h => h.birdie), overS = g.Sum(h => h.over) }).ToList();

    var t = (from o in one select o)
    .Union(two).Union(three).Union(four).Union(five).Union(six).Union(seven).Union(eight).Union(nine).Union(ten).Union(eleven).Union(twelve).Union(thirteen).Union(fourteen).Union(fifteen).Union(sixteen).Union(seventeen).Union(eighteen);
    
    List<int> _birdies = new List<int> { };
    List<int> _pars = new List<int> { };
    List<int> _overs = new List<int> { };
    foreach (var x in t)
    {
        _birdies.Add(x.birds);
    }
    foreach (var x in t)
    {
        _pars.Add(x.parS);
    }
    foreach (var x in t)
    {
        _overs.Add(x.overS);
    }
    ViewBag.birds = _birdies.ToArray();
    ViewBag.pars = _pars.ToArray();
    ViewBag.overs = _overs.ToArray();
    
    //end of 'Bar Chart'    

}
@section scriptsh{
    <script src="http://cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
        new Chartist.Bar('#bar-chart', {
            labels: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9', 'h10', 'h11', 'h12', 'h13', 'h14', 'h15', 'h16', 'h17', 'h18'],
            series: [
                [ @(string.Join(", ", (int[])ViewBag.overs))],
                [ @(string.Join(", ", (int[])ViewBag.pars))],
                [ @(string.Join(", ", (int[])ViewBag.birds))]
            ]
        }, {
            stackBars: true,
            axisY: {
                labelInterpolationFnc: function (value) {
                    return (value / 1);
                }
            }
        }).on('draw', function (data) {
            if (data.type === 'bar') {
                data.element.attr({
                    style: 'stroke-width: 5px'
                });
            }
        });

    	        // Start animated graph
    	         new Chartist.Line('#animated-chart', {
    	            labels: [@Html.Raw("'" + string.Join("', '", (string[])ViewBag.labels) + "'")],
    	            series: [

                      [ @(string.Join(", ", (int[])ViewBag.series))]
    	            ]
    	        }, {
    	            low: 0,
    	            axisX: {
    	                offset: 60
    	            },
    	            classNames: {
    	        label: 'ct-label ct-vertical'
    	            },
                    chartPadding:10
    	        });

    	        // Put a sequence number aside so we can use it in the event callbacks
    	        var seq = 0,
                  delays = 80,
                  durations = 500;

  

    	    });
</script>

}

<h2>@ViewBag.Title</h2>
@*<img src='@Url.Action("Graph")'  />*@

<div class="ct-chart ct-perfect-fourth" id="animated-chart"></div>
<h2>Northampton Hospital Hill Difficulty</h2>
@*<div style = "width:10px; height:10px; background-color:yellow;"></div><p style="display:inline;"> birdie</p>
<div style = "width:10px; height:10px; background-color:red;"></div><p> over par</p>
<div style = "width:10px; height:10px; background-color:#007acc;"></div><p> par</p>
*@
<ul class="legend">
    <li><span class="superawesome"></span> Birdies</li>
    <li><span class="awesome"></span> Pars</li>
    <li><span class="kindaawesome"></span> Over Pars</li>
</ul>
<div class="ct-chart ct-perfect-fourth" id="bar-chart"></div>